name: Backend CI # Define the name of the CI workflow

on: # Define the event that triggers the workflow
  push: # Trigger the workflow on a push event
    branches: # Specify the branches to monitor
      # Run CI/CD pipeline only when code is pushed to the main branch
      - main # Trigger CI on pushes to the main branch

jobs: # Define the jobs that will run in this workflow
  test: # Job name (test job)
    # Define the sequence of steps to be executed under the jobs.
    name: Run Tests # Display name for the job
    runs-on: self-hosted # Specify the runner (self-hosted machine) to execute the job

    strategy: # Define a strategy for running the job
      matrix: # Use a matrix to run the job in multiple environments
        node-version: [22] # Test on multiple Node.js versions

    environment: MONGO_URI # Define the environment variable for MongoDB connection

    steps: # Define the sequence of steps to be executed in this job
      - name: Checkout Code
        uses: actions/checkout@v3 # Clone the repository code to the runner

      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3 # Use the Node.js version specified in the matrix
        with:
          node-version: ${{ matrix.node-version }}

      - name: Print Env Secret

        env: # Define environment cariables for this step
          MONGO_URI: ${{ secrets.MONGO_URI }} # MongoDB connection string
          JWT_SECRET: ${{ secrets.JWT_SECRET }} # JWT authentication secret
          PORT: ${{ secrets.PORT }} # Application port
        run: | # Run multiple shell commands
          echo "Secret 1 is: $MONGO_URI"
          echo "Secret 2 is: $JWT_SECRET"
          echo "Secret 3 is: $PORT"

      - run: pm2 stop all # Stop all PM2-managed processes in AWS

      # Install dependencies for backend
      - name: Install Backend Dependencies
        working-directory: ./backend # Navigate to backend folder
        run: | # Run multiple commands
          npm install --global yarn
          yarn --version
          yarn install

      # Install dependencies for frontend
      - name: Install Frontend Dependencies
        working-directory: ./frontend # Navigate to frontend folder
        run: | #Run multiple commands
          df -h 
          sudo rm -rf ./build
          yarn install
          yarn run build

      # Run backend tests
      - name: Run Backend Tests
        env: # Define environment variables for this step
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: ${{ secrets.PORT }}
        working-directory: ./backend
        run: npm test

      - run: npm ci # Install dependencies using npm clean install

      # Create .env File and Add Secrets for Production in AWS
      - run: | # Run multiple commands
          cd ./backend
          touch .env
          echo "${{ secrets.PROD }}" > .env

      # Start and restart Services in AWS
      - run: pm2 start all # Start all PM2-managed processes

      - run: pm2 restart all # Restart all PM2-managed processes
